theme(axis.text.x = element_text( hjust = 1,angle = 45))+
theme(plot.subtitle=element_text(size=30, hjust=0, color="black"))+
theme(axis.title.x=element_text(size=17, hjust=0.5, color="black"))+
theme(axis.title.y=element_text(size=17, hjust=0.5, color="black"))+ geom_text(aes(label=group,vjust = -0.8, hjust = 0.5),show.legend = FALSE)
ggsave(paste0(title,"_lineplot.png"),plot=a,width=10,height=8)
}
ge.plot.line(data,[1,2],[1,2])
ge.plot.line(data,c(1,2),c(1,2)
)
ge.plot.line(data,c(1,2),c(1,2))
ge.plot.line(data)
ge.plot.line(data,data$S9557LPST_C1_0,data$S9557LPST_C1_1)
ge.plot.line(data,S9557LPST_C1_0,S9557LPST_C1_1)
ge.plot.line(data,data$S9557LPST_C1_0,data$S9557LPST_C1_1,data$S9557LPST_C1_1)
ge.plot.line(data,data$S9557LPST_C1_0,data$S9557LPST_C1_1,data$S9557LPST_C1_1)
drawPCA<- function(data,type,title="",ptColors=NULL,label=NULL,width=12,height=8){
M <- t(data)
M <- apply(M,2,function(v){(v-mean(v,na.rm=T))/sd(v,na.rm=T)})
clnames <- row.names(data)
M[is.na(M)] <- 0
m1 <- prcomp(M);
Y  <- scale(M, m1$center, m1$scale) %*% m1$rotation
Y  <- Y[,c(1,2)]
Y <- data.frame(Y,type);
colnames(Y) <- c("PC1","PC2","label")
eigs <- m1$sdev^2
percentages <- eigs[1:2] / sum(eigs)
p <- ggplot(Y, aes(x=PC1, y=PC2, colour=label)) + geom_point(size=4)
p <- p + theme(  panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text = element_text(size = 15,color = "black"),
panel.border = element_blank(),
axis.line.x = element_line(color="black", size = 0.25),
axis.line.y = element_line(color="black", size = 0.25),
plot.title   = element_text(size=17),
axis.title   =element_text(size=17),
panel.background = element_blank())
strLabx <- sprintf("PC1(%4.2f%%)",percentages[1]*100)
p <- p +  labs(x =strLabx,y = sprintf("PC2(%4.2f%%)",percentages[2]*100),
title =sprintf("PCA: %d features",length(clnames)))
if(!is.null(ptColors)){
p <- p +   scale_colour_manual(values=ptColors)
}
if(!is.null(label)){
p <- p +   geom_text(aes(label=type,vjust = -0.8, hjust = 0.5,size=0.5),show.legend = FALSE)
}
ggsave(paste0(title,"_pca.pdf"),plot =p ,width=width,height=height,device = NULL)
}
drawPCA(data,c(C,C,C,C,C,C,C,C,C,C,C,C,C,C,C,C,N,N,N,N,N))
drawPCA(data)
drawPCA(data,c(C,N))
drawPCA(data,c(C,C))
drawPCA(data,c(C,c,c,c,c,c,c,c,c,c,c,c,c,c,c,c,c,c,c,c,c))
drawPCA(data,c(C,c,c,c,c,c,c,c,c,c,c,c,c,c,c,c,c,c,c,c,c,c))
View(data)
drawPCA(data,c(C,C,C,C,C,C,C,C,C,C,C,C,C,C,C,C,C,C,C,C,C))
type<-c(C,C,C,C,C,C,C,C,C,C,C,C,C,C,C,C,C,N,N,N,N)
type<-c(C,C,C,C,C,C,C,C,C,C,C,C,C,C,C,C,C,V,V,V,V)
type<-c(C,C,C,C,C,C,C,C,C,C,C,C,C,C,C,C,C,c,c,c,c)
mode(type)
type=type.T
type<-data.frame(type)
type<-type.T
type<-t(type)
type
View(type)
View(type)
View(type)
type<-c(C,C,C,C,C,C,C,C,C,C,C,C,C,C,C,C,C,c,c,c,c)
type<-t(type)
type
type<-c('C','C','C','C','C','C','C','C','C','C','C','C','C','C','C','N','N','N','N','N','N')
type
type<-t(type)
type
drawPCA(data,type)
wd
pwd
drawPCA(data,type)
type
type<-c('C','C','C','C','C','C','C','N','N','N','N','N','N','N','N','N','N','N','N','N','N')
drawPCA(data,type)
type<-c('C','C','C','C','C','C','C','C','C','C','C','C','C','C','N','N','N','N','N','N','N')
drawPCA(data,type)
drawPCA(data,type)
drawPCA<- function(data,type,title="",ptColors=NULL,label=NULL,width=12,height=8){
M <- t(data)
M <- apply(M,2,function(v){(v-mean(v,na.rm=T))/sd(v,na.rm=T)})
clnames <- row.names(data)
M[is.na(M)] <- 0
m1 <- prcomp(M);
Y  <- scale(M, m1$center, m1$scale) %*% m1$rotation
Y  <- Y[,c(1,2)]
print(Y)
Y <- data.frame(Y,type);
colnames(Y) <- c("PC1","PC2","label")
eigs <- m1$sdev^2
percentages <- eigs[1:2] / sum(eigs)
p <- ggplot(Y, aes(x=PC1, y=PC2, colour=label)) + geom_point(size=4)
p <- p + theme(  panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text = element_text(size = 15,color = "black"),
panel.border = element_blank(),
axis.line.x = element_line(color="black", size = 0.25),
axis.line.y = element_line(color="black", size = 0.25),
plot.title   = element_text(size=17),
axis.title   =element_text(size=17),
panel.background = element_blank())
strLabx <- sprintf("PC1(%4.2f%%)",percentages[1]*100)
p <- p +  labs(x =strLabx,y = sprintf("PC2(%4.2f%%)",percentages[2]*100),
title =sprintf("PCA: %d features",length(clnames)))
if(!is.null(ptColors)){
p <- p +   scale_colour_manual(values=ptColors)
}
if(!is.null(label)){
p <- p +   geom_text(aes(label=type,vjust = -0.8, hjust = 0.5,size=0.5),show.legend = FALSE)
}
ggsave(paste0(title,"_pca.pdf"),plot =p ,width=width,height=height,device = NULL)
}
drawPCA(data,type)
drawPCA<- function(data,type,title="",ptColors=NULL,label=NULL,width=12,height=8){
M <- t(data)
M <- apply(M,2,function(v){(v-mean(v,na.rm=T))/sd(v,na.rm=T)})
clnames <- row.names(data)
M[is.na(M)] <- 0
m1 <- prcomp(M);
Y  <- scale(M, m1$center, m1$scale) %*% m1$rotation
print(Y)
Y  <- Y[,c(1,2)]
print(Y)
Y <- data.frame(Y,type);
colnames(Y) <- c("PC1","PC2","label")
eigs <- m1$sdev^2
percentages <- eigs[1:2] / sum(eigs)
p <- ggplot(Y, aes(x=PC1, y=PC2, colour=label)) + geom_point(size=4)
p <- p + theme(  panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text = element_text(size = 15,color = "black"),
panel.border = element_blank(),
axis.line.x = element_line(color="black", size = 0.25),
axis.line.y = element_line(color="black", size = 0.25),
plot.title   = element_text(size=17),
axis.title   =element_text(size=17),
panel.background = element_blank())
strLabx <- sprintf("PC1(%4.2f%%)",percentages[1]*100)
p <- p +  labs(x =strLabx,y = sprintf("PC2(%4.2f%%)",percentages[2]*100),
title =sprintf("PCA: %d features",length(clnames)))
if(!is.null(ptColors)){
p <- p +   scale_colour_manual(values=ptColors)
}
if(!is.null(label)){
p <- p +   geom_text(aes(label=type,vjust = -0.8, hjust = 0.5,size=0.5),show.legend = FALSE)
}
ggsave(paste0(title,"_pca.pdf"),plot =p ,width=width,height=height,device = NULL)
}
drawPCA(data,type)
drawPCA<- function(data,type,title="",ptColors=NULL,label=NULL,width=12,height=8){
M <- t(data)
M <- apply(M,2,function(v){(v-mean(v,na.rm=T))/sd(v,na.rm=T)})
clnames <- row.names(data)
M[is.na(M)] <- 0
m1 <- prcomp(M);
Y  <- scale(M, m1$center, m1$scale)
print(Y)
Y  <- Y[,c(1,2)]
print(Y)
Y <- data.frame(Y,type);
colnames(Y) <- c("PC1","PC2","label")
eigs <- m1$sdev^2
percentages <- eigs[1:2] / sum(eigs)
p <- ggplot(Y, aes(x=PC1, y=PC2, colour=label)) + geom_point(size=4)
p <- p + theme(  panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text = element_text(size = 15,color = "black"),
panel.border = element_blank(),
axis.line.x = element_line(color="black", size = 0.25),
axis.line.y = element_line(color="black", size = 0.25),
plot.title   = element_text(size=17),
axis.title   =element_text(size=17),
panel.background = element_blank())
strLabx <- sprintf("PC1(%4.2f%%)",percentages[1]*100)
p <- p +  labs(x =strLabx,y = sprintf("PC2(%4.2f%%)",percentages[2]*100),
title =sprintf("PCA: %d features",length(clnames)))
if(!is.null(ptColors)){
p <- p +   scale_colour_manual(values=ptColors)
}
if(!is.null(label)){
p <- p +   geom_text(aes(label=type,vjust = -0.8, hjust = 0.5,size=0.5),show.legend = FALSE)
}
ggsave(paste0(title,"_pca.pdf"),plot =p ,width=width,height=height,device = NULL)
}
drawPCA(data,type)
drawPCA<- function(data,type,title="",ptColors=NULL,label=NULL,width=12,height=8){
M <- t(data)
M <- apply(M,2,function(v){(v-mean(v,na.rm=T))/sd(v,na.rm=T)})
clnames <- row.names(data)
M[is.na(M)] <- 0
m1 <- prcomp(M);
Y  <- scale(M, m1$center, m1$scale) %*% m1$rotation
print(Y)
Y  <- Y[,c(1,2)]
print(Y)
Y <- data.frame(Y,type);
colnames(Y) <- c("PC1","PC2","label")
eigs <- m1$sdev^2
percentages <- eigs[1:2] / sum(eigs)
p <- ggplot(Y, aes(x=PC1, y=PC2, colour=label)) + geom_point(size=4)
p <- p + theme(  panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text = element_text(size = 15,color = "black"),
panel.border = element_blank(),
axis.line.x = element_line(color="black", size = 0.25),
axis.line.y = element_line(color="black", size = 0.25),
plot.title   = element_text(size=17),
axis.title   =element_text(size=17),
panel.background = element_blank())
strLabx <- sprintf("PC1(%4.2f%%)",percentages[1]*100)
p <- p +  labs(x =strLabx,y = sprintf("PC2(%4.2f%%)",percentages[2]*100),
title =sprintf("PCA: %d features",length(clnames)))
if(!is.null(ptColors)){
p <- p +   scale_colour_manual(values=ptColors)
}
if(!is.null(label)){
p <- p +   geom_text(aes(label=type,vjust = -0.8, hjust = 0.5,size=0.5),show.legend = FALSE)
}
ggsave(paste0(title,"_pca.pdf"),plot =p ,width=width,height=height,device = NULL)
}
drawPCA(data,type)
ge.plot.pca <- function(data,type,title=""){
df10 <- data
df10[is.na(df10)] <- 0
names <-type
df10 <- t(apply(df10, 1, scale))
colnames(df10) <- names
df.pr <- prcomp(t(df10))
a<- ggbiplot(df.pr, obs.scale = 1, var.scale = 10, groups =names,alpha = 0,varname.size= 1, ellipse =F, circle = F,var.axes = F)+
geom_point(aes(colour=names),size = 3,alpha=1)+
# geom_point(aes(shape=df1$column),size = 3,alpha=1/2)+
#scale_color_manual(name="type",values=c("#537e35","#e17832","#f5b819","#5992c6","#282f89"))+
theme(legend.direction = 'horizontal',legend.position = 'top',legend.text = element_text(size = 15,color = "black"), legend.title = element_text(size=15,color="black") ,panel.grid.major =element_blank(), panel.grid.minor = element_blank(),panel.background = element_blank(),axis.line = element_line(colour = "black"))+ theme(panel.grid =element_blank())+
theme(axis.text = element_text(size = 15,color = "black"))+
theme(plot.subtitle=element_text(size=30, hjust=0, color="black"))+
theme(axis.title.x=element_text(size=17, hjust=0.5, color="black"))+
theme(axis.title.y=element_text(size=17, hjust=0.5, color="black"))             #geom_text(aes(label=type,vjust = -0.8, hjust = 0.5,size=0.5),show.legend = FALSE)
ggsave(paste0(title,"_pca.pdf"),plot =a ,width=12,height=8,device = NULL)
}
ge.plot.pca(data,type)
drawPCA(data,type)
drawPCA(data,type)
drawPCA<- function(data,type,title="",ptColors=NULL,label=NULL,width=12,height=8){
M <- t(data)
M <- apply(M,2,function(v){(v-mean(v,na.rm=T))/sd(v,na.rm=T)})
print(M)
clnames <- row.names(data)
M[is.na(M)] <- 0
m1 <- prcomp(M);
Y  <- scale(M, m1$center, m1$scale) %*% m1$rotation
print(Y)
Y  <- Y[,c(1,2)]
print(Y)
Y <- data.frame(Y,type);
colnames(Y) <- c("PC1","PC2","label")
eigs <- m1$sdev^2
percentages <- eigs[1:2] / sum(eigs)
p <- ggplot(Y, aes(x=PC1, y=PC2, colour=label)) + geom_point(size=4)
p <- p + theme(  panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text = element_text(size = 15,color = "black"),
panel.border = element_blank(),
axis.line.x = element_line(color="black", size = 0.25),
axis.line.y = element_line(color="black", size = 0.25),
plot.title   = element_text(size=17),
axis.title   =element_text(size=17),
panel.background = element_blank())
strLabx <- sprintf("PC1(%4.2f%%)",percentages[1]*100)
p <- p +  labs(x =strLabx,y = sprintf("PC2(%4.2f%%)",percentages[2]*100),
title =sprintf("PCA: %d features",length(clnames)))
if(!is.null(ptColors)){
p <- p +   scale_colour_manual(values=ptColors)
}
if(!is.null(label)){
p <- p +   geom_text(aes(label=type,vjust = -0.8, hjust = 0.5,size=0.5),show.legend = FALSE)
}
ggsave(paste0(title,"_pca.pdf"),plot =p ,width=width,height=height,device = NULL)
}
drawPCA(data,type)
drawPCA<- function(data,type,title="",ptColors=NULL,label=NULL,width=12,height=8){
M <- t(data)
M <- apply(M,2,function(v){(v-mean(v,na.rm=T))/sd(v,na.rm=T)})
print(M$1)
clnames <- row.names(data)
M[is.na(M)] <- 0
m1 <- prcomp(M);
Y  <- scale(M, m1$center, m1$scale) %*% m1$rotation
print(Y)
Y  <- Y[,c(1,2)]
print(Y)
Y <- data.frame(Y,type);
colnames(Y) <- c("PC1","PC2","label")
eigs <- m1$sdev^2
percentages <- eigs[1:2] / sum(eigs)
p <- ggplot(Y, aes(x=PC1, y=PC2, colour=label)) + geom_point(size=4)
p <- p + theme(  panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text = element_text(size = 15,color = "black"),
panel.border = element_blank(),
axis.line.x = element_line(color="black", size = 0.25),
axis.line.y = element_line(color="black", size = 0.25),
plot.title   = element_text(size=17),
axis.title   =element_text(size=17),
panel.background = element_blank())
strLabx <- sprintf("PC1(%4.2f%%)",percentages[1]*100)
p <- p +  labs(x =strLabx,y = sprintf("PC2(%4.2f%%)",percentages[2]*100),
title =sprintf("PCA: %d features",length(clnames)))
if(!is.null(ptColors)){
p <- p +   scale_colour_manual(values=ptColors)
}
if(!is.null(label)){
p <- p +   geom_text(aes(label=type,vjust = -0.8, hjust = 0.5,size=0.5),show.legend = FALSE)
}
ggsave(paste0(title,"_pca.pdf"),plot =p ,width=width,height=height,device = NULL)
}
drawPCA<- function(data,type,title="",ptColors=NULL,label=NULL,width=12,height=8){
M <- t(data)
M <- apply(M,2,function(v){(v-mean(v,na.rm=T))/sd(v,na.rm=T)})
print(M[,1])
clnames <- row.names(data)
M[is.na(M)] <- 0
m1 <- prcomp(M);
Y  <- scale(M, m1$center, m1$scale) %*% m1$rotation
print(Y)
Y  <- Y[,c(1,2)]
print(Y)
Y <- data.frame(Y,type);
colnames(Y) <- c("PC1","PC2","label")
eigs <- m1$sdev^2
percentages <- eigs[1:2] / sum(eigs)
p <- ggplot(Y, aes(x=PC1, y=PC2, colour=label)) + geom_point(size=4)
p <- p + theme(  panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text = element_text(size = 15,color = "black"),
panel.border = element_blank(),
axis.line.x = element_line(color="black", size = 0.25),
axis.line.y = element_line(color="black", size = 0.25),
plot.title   = element_text(size=17),
axis.title   =element_text(size=17),
panel.background = element_blank())
strLabx <- sprintf("PC1(%4.2f%%)",percentages[1]*100)
p <- p +  labs(x =strLabx,y = sprintf("PC2(%4.2f%%)",percentages[2]*100),
title =sprintf("PCA: %d features",length(clnames)))
if(!is.null(ptColors)){
p <- p +   scale_colour_manual(values=ptColors)
}
if(!is.null(label)){
p <- p +   geom_text(aes(label=type,vjust = -0.8, hjust = 0.5,size=0.5),show.legend = FALSE)
}
ggsave(paste0(title,"_pca.pdf"),plot =p ,width=width,height=height,device = NULL)
}
drawPCA<- function(data,type,title="",ptColors=NULL,label=NULL,width=12,height=8){
M <- t(data)
M <- apply(M,2,function(v){(v-mean(v,na.rm=T))/sd(v,na.rm=T)})
print(M$1)
clnames <- row.names(data)
M[is.na(M)] <- 0
m1 <- prcomp(M);
Y  <- scale(M, m1$center, m1$scale) %*% m1$rotation
print(Y)
Y  <- Y[,c(1,2)]
print(Y)
Y <- data.frame(Y,type);
colnames(Y) <- c("PC1","PC2","label")
eigs <- m1$sdev^2
percentages <- eigs[1:2] / sum(eigs)
p <- ggplot(Y, aes(x=PC1, y=PC2, colour=label)) + geom_point(size=4)
p <- p + theme(  panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text = element_text(size = 15,color = "black"),
panel.border = element_blank(),
axis.line.x = element_line(color="black", size = 0.25),
axis.line.y = element_line(color="black", size = 0.25),
plot.title   = element_text(size=17),
axis.title   =element_text(size=17),
panel.background = element_blank())
strLabx <- sprintf("PC1(%4.2f%%)",percentages[1]*100)
p <- p +  labs(x =strLabx,y = sprintf("PC2(%4.2f%%)",percentages[2]*100),
title =sprintf("PCA: %d features",length(clnames)))
if(!is.null(ptColors)){
p <- p +   scale_colour_manual(values=ptColors)
}
if(!is.null(label)){
p <- p +   geom_text(aes(label=type,vjust = -0.8, hjust = 0.5,size=0.5),show.legend = FALSE)
}
ggsave(paste0(title,"_pca.pdf"),plot =p ,width=width,height=height,device = NULL)
}
drawPCA<- function(data,type,title="",ptColors=NULL,label=NULL,width=12,height=8){
M <- t(data)
M <- apply(M,2,function(v){(v-mean(v,na.rm=T))/sd(v,na.rm=T)})
print(M[,1])
clnames <- row.names(data)
M[is.na(M)] <- 0
m1 <- prcomp(M);
Y  <- scale(M, m1$center, m1$scale) %*% m1$rotation
print(Y)
Y  <- Y[,c(1,2)]
print(Y)
Y <- data.frame(Y,type);
colnames(Y) <- c("PC1","PC2","label")
eigs <- m1$sdev^2
percentages <- eigs[1:2] / sum(eigs)
p <- ggplot(Y, aes(x=PC1, y=PC2, colour=label)) + geom_point(size=4)
p <- p + theme(  panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text = element_text(size = 15,color = "black"),
panel.border = element_blank(),
axis.line.x = element_line(color="black", size = 0.25),
axis.line.y = element_line(color="black", size = 0.25),
plot.title   = element_text(size=17),
axis.title   =element_text(size=17),
panel.background = element_blank())
strLabx <- sprintf("PC1(%4.2f%%)",percentages[1]*100)
p <- p +  labs(x =strLabx,y = sprintf("PC2(%4.2f%%)",percentages[2]*100),
title =sprintf("PCA: %d features",length(clnames)))
if(!is.null(ptColors)){
p <- p +   scale_colour_manual(values=ptColors)
}
if(!is.null(label)){
p <- p +   geom_text(aes(label=type,vjust = -0.8, hjust = 0.5,size=0.5),show.legend = FALSE)
}
ggsave(paste0(title,"_pca.pdf"),plot =p ,width=width,height=height,device = NULL)
}
drawPCA(data,type)
View(data)
View(data)
data<-read.csv('xx_4758prot_21sample.csv',stringsAsFactors = T,index='0')
data<-read.csv('xx_4758prot_21sample.csv',stringsAsFactors = T)
drawPCA(data,type)
data<-data(,-1)
data<-data(-1)
data<-read.csv('xx_4758prot_21sample.csv',stringsAsFactors = T)
data<-data(-1)
data<-read.csv('xx_4758prot_21sample.csv',stringsAsFactors = T)
data<-data[-1]
drawPCA(data,type)
drawPCA(data,type)
ge.plot.umap<- function(data,type,title=""){
col2=brewer.pal(9,"Set1")[1:length(unique(type))]
cl <- data.frame(col2,row.names =unique(type),stringsAsFactors = F)
cl2 <- cl[match(type,row.names(cl)),1]
df10 <- data
df10[is.na(df10)] <- 0
df10 <- t(apply(df10, 1, scale))
colnames(df10) <- type
pdf(paste0(title,"_UMAP.pdf"))
df.umap <- umap(t(df10),n_neighbors=ncol(data)-1)
plot(df.umap$layout,col = cl2, main = "umap", pch = 20,cex=2,cex.axis=2,cex.lab=2)
legend("topright",legend=row.names(cl), fill=cl$col2, lty=1,lwd=1)
dev.off()
}
umap(data,type)
ge.plot.umap(data,type)
ge.plot.umap<- function(data,type,title=""){
col2=brewer.pal(9,"Set1")[1:length(unique(type))]
cl <- data.frame(col2,row.names =unique(type),stringsAsFactors = F)
cl2 <- cl[match(type,row.names(cl)),1]
df10 <- data
df10[is.na(df10)] <- 0
df10 <- t(apply(df10, 1, scale))
colnames(df10) <- type
pdf(paste0(title,"_UMAP.pdf"))
df.umap <- umap(t(df10),n_neighbors=ncol(data)-1)
plot(df.umap$layout,col = cl2, main = "umap", pch = 20,cex=2,cex.axis=2,cex.lab=2)
legend("topright",legend=row.names(cl), fill=cl$col2, lty=1,lwd=1)
dev.off()
}
ge.plot.umap(data,type)
View(data)
View(data)
ge.plot.umap.label<- function(data,type,label,title=""){
df10 <- data
df10[is.na(df10)] <- 0
names <-type
df10 <- t(apply(df10, 1, scale))
colnames(df10) <- names
color <- factor(names) #,levels = c("red","#74A9CF")
pdf(paste0(title,"_UMAP.pdf"))
df.umap <- umap(t(df10),n_neighbors=ncol(data)-1)
plot(df.umap$layout,col = color, main = "umap", pch = 20,cex=2,cex.axis=2,cex.lab=2)
text(df.umap$layout, pos = 1, labels = label, col= "DimGrey",cex = 0.8)
dev.off()
}
ge.plot.umap(data,type,type)
ge.plot.umap.label(data,type,type)
ge.plot.umap.label(data,type,type)
ge.plot.techrep.correlation <- function(cor1,cor2,name="pearson_correlation"){
pdf(paste0(name,".pdf"))
r <- cor(cor1, cor2, use = "pairwise.complete.obs")
smoothScatter(cor1, cor2, nrpoints = 100,cex = 2,
colramp = colorRampPalette(c(blues9,"orange", "red")),
main = name, xlab = "repA", ylab = "repB")
abline(lm(cor1 ~ cor2), col="red", lwd=2, lty=2)
text(min(cor1,na.rm = T)*1.3,max(cor2,na.rm = T)*0.8,labels =paste0( "r =", as.character(round(r,4))),cex = 1.2)
dev.off()
}
ge.plot.pool.correlation <- function(data,name="bio_cor",method="circle"){
library(corrplot)
df_cor <- data.frame(data)
pdf(paste0(name,".pdf"))
mycor=cor(df_cor, use = "pairwise.complete.obs")
corrplot(mycor, method=method,type = "upper",tl.col = "black",tl.srt = 45, tl.cex = 1.5)
dev.off()
}
ge.plot.pool.correlation(data)
